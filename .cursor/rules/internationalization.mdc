# Internationalization & Localization

## Locale Structure
- Locale files stored in [src/_locales/](mdc:src/_locales/)
- Supported languages: English (en) and Traditional Chinese (zh_TW)
- Default locale: English (`default_locale: "en"` in manifest)

## Message Keys
- Use descriptive keys: `popup_slide_1_text`, `popup_help_text`
- Follow consistent naming: `{component}_{element}_{purpose}`
- Store messages in [src/_locales/en/messages.json](mdc:src/_locales/en/messages.json)

## Usage in Code
- Use `chrome.i18n.getMessage(key)` for all user-facing text
- Never hardcode text strings in components
- Example: `{{ getMessage('popup_slide_1_text') }}`

## Locale File Format
- JSON structure with nested message keys
- Include all UI text, help messages, and button labels
- Maintain consistency between language versions

## Build Integration
- Locale files automatically copied to build output via Vite static copy plugin
- Chrome extension automatically loads appropriate locale based on browser language
- Test both language versions during development
description:
globs:
alwaysApply: true
---
