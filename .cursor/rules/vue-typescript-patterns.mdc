# Vue 3 + TypeScript Development Patterns

## Component Structure
- Use `<script setup lang="ts">` for Composition API
- Import Vue composables: `ref`, `computed`, `onMounted`, etc.
- Use TypeScript interfaces for component props and emits

## State Management
- Use Pinia stores for global state: [src/apps/content/store/index.ts](mdc:src/apps/content/store/index.ts)
- Create stores with `defineStore()` and use with `useStore()`
- Set active Pinia instance with `setActivePinia()` in content scripts

## Styling
- Use scoped CSS with `<style scoped>`
- Import Google Fonts for Chinese text support (Noto Sans TC)
- Follow BEM-like naming conventions for CSS classes
- Use CSS custom properties for consistent theming

## Image Handling
- Import images as modules: `import Slider1 from '@/assets/images/popup/slide1.svg'`
- Use dynamic image sources with Vue binding: `:src="currentSlide.img"`
- Store image assets in [src/assets/images/](mdc:src/assets/images/)

## Internationalization
- Use `chrome.i18n.getMessage()` for localized text
- Store locale files in [src/_locales/](mdc:src/_locales/)
- Support both English and Traditional Chinese (zh_TW)

## Component Communication
- Use props for parent-to-child communication
- Use emits for child-to-parent communication
- Use Pinia stores for cross-component state sharing
description:
globs:
alwaysApply: true
---
